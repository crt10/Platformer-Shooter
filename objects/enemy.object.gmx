<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>monsteridle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>bulletcollision</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 3;
disappear = false;
xspeed = 5;
yspeed = -10;
changedir = true;
jspeed = 0;
wspeed = 0;
jumpres = true;
damage = 1;
currspeed = 0;
hit = false;
image_speed = .2;
sprt_index = monsteridle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wspeed = xspeed;
if (place_meeting(x,y+1,block))
{
    jspeed = yspeed - irandom(2);
}
currspeed = wspeed;
jumpres = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (changedir)
{
    if (player.x &lt; x &amp;&amp; xspeed &gt; 0)
    {
        xspeed *= -1;
    }
    if (player.x &gt; x &amp;&amp; xspeed &lt; 0)
    {
        xspeed *= -1;
    }
}
if (distance_to_object(player) &lt;= 284 &amp;&amp; jumpres &amp;&amp; changedir)
{
    jumpres = false;
    alarm[1] = (irandom(2)+1)*7*(delta_time/1000000)*60;
}
else if (distance_to_object(player) &lt;= 576 &amp;&amp; jumpres &amp;&amp; changedir)
{
    wspeed = xspeed/1.5;
    if (place_meeting(x,y+1,block))
    {
        jspeed = yspeed/1.5;
    }
    currspeed = wspeed;
}
if (!place_meeting(x,y+1,block) &amp;&amp; jspeed &lt; 40)
{
    changedir = false;
    jspeed += global.grv;
}
else
{
    changedir = true;
}
if (place_meeting(x,y+jspeed,block))
{
    while (!place_meeting(x,y+sign(jspeed),block))
    {
    y += sign(jspeed);
    }
    jspeed = 0;
    if (!place_meeting(x,y-1,block))
    {
        wspeed = 0;
    }
}
y += jspeed*(delta_time/1000000)*60;

if (place_meeting(x+wspeed,y,block))
{
    while (!place_meeting(x+sign(wspeed),y,block))
    {
    x += sign(wspeed);
    }
    wspeed = 0;
}
if (wspeed = 0 &amp;&amp; !(place_meeting(x+1,y,block) || place_meeting(x-1,y,block)) &amp;&amp; !place_meeting(x,y+1,block))
{
    wspeed = currspeed;
}
x += wspeed*(delta_time/1000000)*60;

if (jspeed == 0 &amp;&amp; place_meeting(x,y+2,block))
{
    if (sprt_index != monsteridle)
    {
        image_index = 0;
    }
    image_speed = 0.2;
    sprt_index = monsteridle;
}
else if (jspeed &lt; 0)
{
    if (sprt_index != monsterjump)
    {
        image_index = 0;
    }
    sprt_index = monsterjump;
    if (image_index &gt; 3 &amp;&amp; image_index &lt; 4)
    {
        image_speed = 0;
    }
    else
    {
        image_speed = 0.4;
    }
}
else if (jspeed &gt; 0)
{
    if (sprt_index != monsterfall)
    {
        image_index = 0;
    }
    sprt_index = monsterfall;
    if (image_index &gt; 3 &amp;&amp; image_index &lt; 4)
    {
        image_speed = 0;
    }
    else
    {
        image_speed = 0.2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= other.damage;
other.damage = 0;
hit = true;
alarm [2] = 15*(delta_time/1000000)*60;
if (hp &lt;= 0 &amp;&amp; !disappear)
{
    wspeed = 0;
    jspeed = 0;
    damage = 0;
    image_alpha = 0.5;
    alarm[0] = 15*(delta_time/1000000)*60;
    disappear = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprt_index,image_index,x,y,-sign(xspeed),image_yscale,image_angle,c_white,image_alpha);
draw_text(x+50, y-50, "sprite = " + string(sprt_index));
draw_text(x+50, y-75, "spriteimage = " + string(image_index));
draw_text(x+50, y-100, "health = " + string(hp));
if (hit)
{
    image_alpha = .6;
    d3d_set_fog(true, c_white, 0, 0);
    draw_self();
    d3d_set_fog(false, c_white, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
